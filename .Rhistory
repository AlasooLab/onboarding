library("eQTlUtils")
library("eQTLUtils")
mbv_results = eQTLUtils::mbvImportData("~/Downloads/BLUEPRINT_monocytes_H3K27ac/MBV_results/")
mbv_results
mbv_df = purrr::map_df(mbv_results, eQTLUtils::mbvFindBestMatch)
mbv_df
mbv_df$distance
hist(mbv_df$distance)
mbv_df
mbv_df$hom_min_dist
mbv_df$het_consistent_frac
mbv_df$distance
mbv_df$mbv_genotype_id
mbv_df$hom_consistent_frac
dplyr::filter(mbv_df, !is.na(het_min_dist))
#Find the best match for each mbv sample
mbv_df = purrr::map_df(mbv_results, eQTLUtils::mbvFindBestMatch)
#Remove cases where the het_min_dist or hom_min_dist are NA. Thse represent cases where
#the best natch was different when using hom_consistent_frac and het_consistent_frac and are
# thus unlikely to represent true matches
mbv_df = dplyr::filter(mbv_df, !is.na(het_min_dist))
hist(mbv_df$het_consistent_frac)
#Note that the "best" match might still not be very good, if the second closets match is also very similar.
#These cases can be discovered by looking at he histograms of het_min_dist and hom_min_dist
hist(mbv_df$het_min_dist)
#Find the best match for each mbv sample
mbv_df = purrr::map_df(mbv_results, eQTLUtils::mbvFindBestMatch, .id = "sample_id")
mbv_df
mbv_df = dplyr::filter(mbv_df, !is.na(het_min_dist))
mbv_df
hist(mbv_df$het_min_dist)
hist(mbv_df$hom_min_dist)
mbv_results = eQTLUtils::mbvImportData("~/Downloads/BLUEPRINT_monocytes_H3K4me1/MBV_results/")
mbv_df = purrr::map_df(mbv_results, eQTLUtils::mbvFindBestMatch, .id = "sample_id")
mbv_df = dplyr::filter(mbv_df, !is.na(het_min_dist))
hist(mbv_df$het_min_dist)
hist(mbv_df$hom_min_dist)
hist(mbv_df$het_min_dist)
mbv_df
hist(mbv_df$het_min_dist)
mbv_df = dplyr::filter(mbv_df, het_min_dist > 0.25)
mbv_df
mbv_df = dplyr::filter(mbv_df, !is.na(het_min_dist))
mbv_df = purrr::map_df(mbv_results, eQTLUtils::mbvFindBestMatch, .id = "sample_id")
mbv_df
mbv_df = dplyr::filter(mbv_df, !is.na(het_min_dist))
mbv_df
mbv_df = dplyr::filter(mbv_df, het_min_dist > 0.25)
mbv_df
hist(mbv_df$het_min_dist)
hist(mbv_df$hom_min_dist)
